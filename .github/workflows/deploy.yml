name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          mkdir -p ~/.ssh
          echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

          echo "Checking SERVER_USER value: $SERVER_USER"

          # Ensure the directory exists and transfer files
          rsync -avz --exclude '.git' --exclude 'venv' -e "ssh -i private_key" . "$SERVER_USER@$SERVER_IP:/home/$SERVER_USER/fastapi-book-project"

          ssh -i private_key "$SERVER_USER@$SERVER_IP" << 'EOF'
            # Define project directory
            PROJECT_DIR="/home/$SERVER_USER/fastapi-book-project"
            if [ "$SERVER_USER" == "root" ]; then
              PROJECT_DIR="/root/fastapi-book-project"
            fi

            # Ensure project directory exists
            sudo mkdir -p "$PROJECT_DIR"
            sudo chown -R "$SERVER_USER":"$SERVER_USER" "$PROJECT_DIR"
            cd "$PROJECT_DIR" || exit

            # Kill existing process
            pkill -9 -f "uvicorn main:app" || echo "No process found"

            # Setup virtual environment
            python3 -m venv venv
            source venv/bin/activate

            # Install dependencies
            pip install --upgrade pip
            pip install -r requirements.txt

            # Start the application in the background
            nohup uvicorn main:app --host 0.0.0.0 --port 8000 > uvicorn.log 2>&1 &
          EOF
